@inject DefaultNavigationService navService


<input placeholder="Search " class="nav-filter" type="search" @oninput="@FilterPanelMenu" />


<RadzenTabs>
    <Tabs>
        <RadzenTabsItem Text="Main" Selected="true">
            <RadzenPanelMenu>
                @foreach (var category in navItems)
                {
                    <RadzenPanelMenuItem @bind-Expanded="@category.Expanded" Text="@category.Name" Path="@category.Path" Icon="@category.Icon">
                        @if (category.Children != null)
                        {
                            @foreach (var example in category.Children.Where(x => !x.RequiresId))
                            {
                                <RadzenPanelMenuItem @bind-Expanded="@example.Expanded" Text="@example.Name" Path="@example.Path" Icon="@example.Icon">
                                    @if (example.Children != null)
                                    {
                                        @foreach (var sub in example.Children.Where(x => !x.RequiresId))
                                        {
                                            <RadzenPanelMenuItem Text="@sub.Name" Path="@sub.Path" Icon="@sub.Icon" />
                                        }
                                    }
                                </RadzenPanelMenuItem>
                            }
                        }
                    </RadzenPanelMenuItem>
                }
            </RadzenPanelMenu>
        </RadzenTabsItem>
       
    </Tabs>
</RadzenTabs>

@code {

    IEnumerable<NavItem> navItems;

    protected override void OnInitialized()
    {
        navItems = navService.NavItems; 
    }

    void FilterPanelMenu(ChangeEventArgs args)
    {
        var term = args.Value.ToString();

        navItems = navService.Filter(term);
    }

}
